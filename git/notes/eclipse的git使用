
1. eclipse生成ssh key，会生成两个文件，默认保存在系统盘中，一定要保存在系统盘里，不能更改
    .pub结尾的文件，表示公钥，给外人用的，没有.pub表示秘钥，给自己用

2. 打开pub文件，复制里面的内容，作为github中的一个新增的ssh的key
    
3.Team--git--Configuration--Add Entry
   entry1: key=http.sslVersion
               value=tlsv1.2
   entry2: key=user.name
               value=gunners_K
   entry23: key=user.email
               value=

4. 克隆、拉取一个git仓库
    克隆
    url：复制git中仓库的url
    user&password：git的账户和密码
    拉取
    在克隆下来的仓库里，选择要拉取的项目，右键--import
    在eclipse.ini中定义TLSv1.1&1.2，表示支持这两个版本的协议

eclipse默认只支持TSL协议(http加密协议)只有1.0和1.1版本，要让他支持1.2版本，能正常访问github，
需要修改eclipse.ini文件，在最后添加这句代码-Dhttps.protocols=TLSv1.1,TLSv1.2


增加和提交内容
5. 创建一个本地工程，右键Team--share project，选中本地仓库，finish
    如果创建的本地工程不是远程或本地仓库，工程会有一个问号的图标显示NO-HEAD，即在本地仓库找不到头信息

6. 项目右键team--commit--勾选要提交到本地仓库的文件
    --点击commit and push    表示把工程同步保存到本地仓库，同时把本地仓库的信息同步更新到远程仓库(github网站)
    --点击commit   表示只把工程同步保存到本地仓库
    这时候工程会有一个圆柱的图标，表示工程目录与本地仓库一一对应，已经同步成功
    如果圆柱变成>号则表示工程被修改，与本地仓库的不统一，还没更新到本地仓库
    这时候需要右键--team--commit，把项目或文件提交更新到本地仓库

7.  如果修改了项目，只是提交修改到本地仓库，项目后面会有向上的箭头和一个数字x，表示有x步操作未同步到远程仓库
     右键team--commit--commit and push将修改提交到远程仓库可解决
     也可以右键team--remote--push
     如果是向下的箭头和一个数字，则表示项目比远程仓库少东西，较少见
     总之提交可分为两种：
             一种是分为两步，先提交到本地仓库，再提交到远程仓库
             一种是只提交到本地仓库



更新内容
   更新内容指的是从远程下载到本地

  1. 本地仓库和远程仓库都有HEAD头信息，相当于目录，索引
     fetch：拉取远程版本库中的变化信息，将远程仓库中最新版本的头信息更新到本地仓库，不包含具体内容
     pull：把远程仓库的头信息和内容都更新到本地仓库
  2. 项目修改后想提交到仓库跟增加和提交内容的做法一样



分支管理
1. 新建分支切换分支：右键项目--team--switch--可以新建分支，灰色代表当前选中分支
2. 右键项目--team--push branch xxx    把分支更新到远程仓库
3. 合并分支：切换到主干之后右键项目--team--merge，选择要合并的分支，点击merge进行合并，之后pull提交到远程仓库
4. 删除分支
           本地分支：右键项目--team--advanced--delete branch  选择要删除的分支，尽量不要删除主干master 
           远程分支：右键项目--team--remote--push--next    在remote ref to delete那里选择要删除的分支--add spec--next



冲突管理
1. 右键项目--team--synchronize workspace
2. 之后再在提交出现冲突的那个工程里右键项目--team--pull，把他改成想要的内容
3. 改完之后把他加入到HEAD索引信息里面，右键项目--team--add index，再commit



删除内容
1. 删除文件：把文件删除后commit即可
2. 删除工程：把工程删除后，在git repository中右键commit，即可把远程仓库删除



还有忽略文件没看

    
